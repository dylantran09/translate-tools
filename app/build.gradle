apply plugin: 'com.android.application'
apply plugin: 'realm-android'
//apply plugin: 'me.tatarka.retrolambda' // Lambda programming: use to simplify RxAndroid function

/* Libraries gradle version */
final PLAY_SERVICE_LIB_VERSION = '10.0.1'
final SUPPORT_LIB_VERSION = '25.2.0'
final BUTTER_KNIFE_LIB_VERSION = '8.4.0'
final ICE_PICK_LIB_VERSION = '3.2.0'
final TWITTER_SDK_VERSION = '2.0.0@aar'
final FACEBOOK_SDK_VERSION = '4.+'
final LEAK_CANARY_LIB_VERSION = '1.3.1'
final RETROFIT2_VERSION = '2.0.2'
final DAGGER2_VERSION = '2.4'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.example.translate"
        minSdkVersion 19
        targetSdkVersion 25
        /* MutiDex flag */
        multiDexEnabled true
        /* Support library for vector drawable */
        vectorDrawables.useSupportLibrary = true
        /* Version */
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file(STORE_FILE)
            storePassword(STORE_PASSWORD)
            keyAlias(KEY_ALIAS)
            keyPassword(KEY_PASSWORD)
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            resValue 'string', "DEBUG", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled true
            debuggable false
            resValue 'string', "DEBUG", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    /* LOCAL LIBRARIES */

    /* CORE GOOGLE ANDROID */
    compile "com.google.android.gms:play-services-maps:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.google.firebase:firebase-core:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.google.firebase:firebase-messaging:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
//    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    compile 'com.android.support:multidex:1.0.1'

    /* NETWORK */
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    compile('org.apache.httpcomponents:httpmime:4.3.6') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    /* RETROFIT 2 */
//    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.4'
//    compile "com.squareup.retrofit2:retrofit:${RETROFIT2_VERSION}"
//    compile "com.squareup.retrofit2:converter-jackson:${RETROFIT2_VERSION}"

    /* DAGGER 2 */
//    compile "com.google.dagger:dagger-android:${DAGGER2_VERSION}"
//    compile "com.google.dagger:dagger-android-support:${DAGGER2_VERSION}" // if you use the support libraries
//    annotationProcessor "com.google.dagger:dagger-android-processor:${DAGGER2_VERSION}"

    /* RxAndroid */
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.0.9'

    /* UTILITIES */
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'commons-net:commons-net:3.3'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile "com.jakewharton:butterknife:${BUTTER_KNIFE_LIB_VERSION}"
    apt "com.jakewharton:butterknife-compiler:${BUTTER_KNIFE_LIB_VERSION}"
    compile "frankiesardo:icepick:${ICE_PICK_LIB_VERSION}"
    provided "frankiesardo:icepick-processor:${ICE_PICK_LIB_VERSION}"

    /* DATABASE */
    // use Active Android for native SQLite
//    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    // use Realm for alternative DB operation

    /* IMAGE LOADING */
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
//    compile 'com.squareup.picasso:picasso:2.5.2'
    // use other libraries if needed

    /* ERROR DETECTION */
    compile 'ch.acra:acra:4.6.2'
//    compile 'com.facebook.stetho:stetho:1.4.1'
//    compile 'com.facebook.stetho:stetho-okhttp3:1.4.1'

    /* LEAK DETECTION */
//    compile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_LIB_VERSION}"
//    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_LIB_VERSION}"
//    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_LIB_VERSION}"

    /* SOCIAL NETWORK */
//    compile "com.facebook.android:facebook-android-sdk:${FACEBOOK_SDK_VERSION}"
//    compile("com.twitter.sdk.android:twitter:${TWITTER_SDK_VERSION}") {
//        transitive = true;
//        exclude module: 'gson'
//    }

    /* JUNIT TEST ENVIRONMENT */
    testCompile 'junit:junit:4.12'
}

// MUST BE AT THE BOTTOM
//apply plugin: 'com.google.gms.google-services'